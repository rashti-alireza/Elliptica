# Manifold or grid Dimension
Dimension = 3;

# point on manifold shown by:
Point = ijk;

C_macro  = READ_v(name);
C_macro2 = REALLOC_v_WRITE_v(name);

`#include "adm_header.h"`

`void adm_update_adm_KIJ_useKij(Patch_T *const patch);`
``
`void adm_update_adm_KIJ_useKij(Patch_T *const patch)`
`{`

Declare = 
{
 # K^{ij}
 (obj = Field,name = adm_KIJ, rank = UU, C_macro2);

 # K_{ij}
 (obj = Field,name = adm_Kij, rank = DD, C_macro);

 # psi
 (obj = Field,name = psi, rank = 0, C_macro);

 # conformal metric inverse
 (obj = Field,name = igConf, rank = UU, C_macro);

}

# symmetries:
Symm[igConf(i,j)  = igConf(j,i)];
Symm[adm_Kij(i,j) = adm_Kij(j,i)];
Symm[adm_KIJ(i,j) = adm_KIJ(j,i)];

`FOR_ALL_ijk`
`{`
	psim4    = psi**(-4);
	KIJ(i,j) = psim4*psim4*igConf(i,i1)*igConf(j,j1)*adm_Kij(-i1,-j1);
	Symm[KIJ(i,j) = KIJ(j,i)];

	Cpopulate[adm_KIJ = KIJ];
`}`


`}`

