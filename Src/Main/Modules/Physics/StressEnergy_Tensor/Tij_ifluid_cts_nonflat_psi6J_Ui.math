# Note: Tij stands for Stress Energy tensor.
# IF stands for ideal fluid, CTS for conformal thin sandwich method;
# thus, Tij_IF_CTS means stress enerfy of ideal fluid in CTS method. 
# given all of the fields needed for J = -gamma(i,-mu)*T(mu,nu)*n(-nu) 
# it builds "momentum current * psi^6", where psi is conformal factor,
# and puts it to _J_U?.
# note: if patch does not contain fluid, it does nothing.
# note: it depends on u0, so better first to call Tij_IF_u0 function. */

# Manifold or grid Dimension
Dimension = 3;

# point on manifold shown by:
Point = ijk;

C_macro = READ_v(name);
C_macro2 = REALLOC_v_WRITE_v(name);
Ccode["#include "Tij_header.h"\n\n"];
Ccode["void Tij_IF_CTS_nonflat_psi6J_Ui(Patch_T *const patch)"];
Ccode["{"];

`  if (!IsItNSPatch(patch))`
`  {`
`    if (_Ind("_J_U0") >= 0)`
`    {`
`      REALLOC_v_WRITE_v(_J_U0)`
`      UNUSED(_J_U0)`
`    }`
`    if (_Ind("_J_U1") >= 0)`
`    {`
`      REALLOC_v_WRITE_v(_J_U1)`
`      UNUSED(_J_U1)`
`    }`
`    if (_Ind("_J_U2") >= 0)`
`    {`
`      REALLOC_v_WRITE_v(_J_U2)`
`      UNUSED(_J_U2)`
`    }`
`    return;`
`  }`

Ccode["  const unsigned nn = patch->nn;"];
Ccode["  unsigned ijk;"];

Declare = 
{
 # conformal metric inverse
 (obj = Field,name = _gammaI, rank = UU, C_macro);

 # enthalpy
 (obj = Field,name = rho0, rank = 0, C_macro);

 # spin part of fluid
 (obj = Field,name = W, rank = U, C_macro);

 # d(phi)/d? for irrotional part of fluid
 (obj = Field,name = dphi, rank = D, C_macro);

 # conformal momentum current
 (obj = Field,name = _J, rank = U, C_macro2);

 # eta
 (obj = Field,name = eta, rank = 0, C_macro);

 # conformal factor
 (obj = Field,name = psi, rank = 0, C_macro);

 # u0
 (obj = Field,name = u0, rank = 0, C_macro);

}

# symmetries:
Symm[_gammaI(i,j)  = _gammaI(j,i)];

# calculate _J:
Ccode["  for(ijk = 0; ijk < nn; ++ijk)"];
Ccode["  {"];
     alpha  = eta/psi;
     psim4  = psi**(-4);
     psi6   = psi**(6);
     j_u(i) = psi6*alpha*u0*rho0*(psim4*_gammaI(i,j)*dphi(-j)+W(i));
     Cpopulate[_J = j_u];
Ccode["  }"];

Ccode["}"];
