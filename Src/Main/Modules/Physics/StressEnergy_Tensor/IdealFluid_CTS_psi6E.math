# Note: Tij stands for Stress Energy tensor.
# IF stands for ideal fluid, CTS for conformal thin sandwich method;
# thus, Tij_IF_CTS means stress enerfy of ideal fluid in CTS method. 
# given all of the fields needed for E = T(mu,nu)*n(-mu)*n(-nu)
# it builds "total energy density * psi^6", where psi is conformal factor,
# and puts it to _E.
# note: if patch does not contain fluid, it does nothing.
# note: it depends on u0, so better first to call Tij_IF_u0 function.

# Manifold or grid Dimension
Dimension = 3;

# point on manifold shown by:
Point = ijk;

C_macro = GET_FIELD(name);
C_macro2 = PREP_FIELD(name);
Ccode["#include "IdealFluid_CTS_lib.h"\n\n"];
Ccode["void Tij_IF_CTS_psi6E(Patch_T *const patch)"];
Ccode["{"];
`  if (!IsItNSPatch(patch))`
`  {`
`    if (_Ind("_E") >= 0)`
`    {`
`      PREP_FIELD(_E)`
`      UNUSED(_E)`
`    }`
`    return;`
`  }`


Ccode["  const unsigned nn = patch->nn;"];
Ccode["  unsigned ijk;"];

Declare = 
{

 # enthalpy
 (obj = Field,name = enthalpy, rank = 0, C_macro);

 # eta
 (obj = Field,name = eta, rank = 0, C_macro);

 # u0
 (obj = Field,name = u0, rank = 0, C_macro);

 # conformal factor
 (obj = Field,name = psi, rank = 0, C_macro);

 # rho0
 (obj = Field,name = rho0, rank = 0, C_macro);

 # pressure
 (obj = Variable,name = p, rank = 0, None);

 # _E
 (obj = Field,name = _E, rank = 0, C_macro2);

}

# calculate _E:
Ccode["  EoS_T *eos = initialize_EoS();"];
Ccode["  for(ijk = 0; ijk < nn; ++ijk)"];
Ccode["  {"];
Ccode["    eos->h   = enthalpy[ijk];"];
Ccode["    double p = eos->pressure(eos);"];
     alpha = eta/psi;
     psi6  = psi**(6);
     Ebar  = psi6*(rho0*enthalpy*(u0*alpha)**2 - p);
     Ccode["  _E[ijk] = Ebar;"];
Ccode["  }"];
Ccode["  free_EoS(eos);"];

Ccode["}"];
